{"version":3,"sources":["assets/imgs/logo.png","components/template/Logo.jsx","components/template/Nav.jsx","components/template/Header.jsx","components/template/Main.jsx","components/Home/Home.jsx","components/User/UserCrud.jsx","main/Routes.jsx","components/template/Footer.jsx","main/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","props","className","to","src","logo","alt","icon","title","subtitle","Fragment","children","headerProps","baseUrl","initialState","user","name","email","telefone","url","list","UserCrud","state","axios","then","resp","setState","data","this","method","id","getUpdatedList","add","filter","u","unshift","event","target","value","split","toLowerCase","type","onChange","e","getUpdateField","placeholder","readonly","onClick","save","clear","delete","renderRows","map","key","renderForm","renderTable","Component","exact","path","component","Home","from","Routes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9a1c385b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8e8b9dba.png\";","import React from 'react'\nimport './Logo.css'\nimport logo from '../../assets/imgs/logo.png'\nimport { Link } from 'react-router-dom'\n\n export default props =>\n    <aside className=\"logo\">\n        <Link to=\"/\" className=\"logo\">\n           <img src={logo} alt=\"logo\" />\n        </Link>\n    </aside>\n","import React from \"react\";\nimport \"./Nav.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default (props) => (\n  <aside className=\"menu-area\">\n    <nav className=\"menu\">\n      {/*Refatorar em casa*/}\n      <Link to=\"/\">\n        <i className=\"fa fa-home\"></i> Inicio\n      </Link>\n      <Link to=\"/users\">\n        <i className=\"fa fa-users\"></i> Leads\n      </Link>\n    </nav>\n  </aside>\n);\n","import React from 'react'\nimport './Header.css'\n\nexport default props =>\n  <header className=\"header d-nome d-sm-flex flex-column\">\n      <h1 className=\"mt-3\">\n      <i className={`fa fa-${props.icon}`}></i> {props.title}\n      </h1>\n<p className=\"lead text-muted\">{props.subtitle}</p>\n  </header>","import React from 'react'\nimport './Main.css'\nimport Header from './Header'\n\nexport default props =>\n   <React.Fragment>\n       <Header {...props} />\n       <main className=\"content container-fluid\">\n           <div className=\"p-3 mt-3\">\n               {props.children}\n           </div>\n       </main>\n   </React.Fragment>","import React from \"react\";\nimport Main from \"../template/Main\";\n\nexport default (props) => (\n  <Main icon=\"home\" title=\"Inicio\" subtitle=\"Página Principal\">\n    <div className=\"display-4\">Bem vindo!</div>\n    <hr />\n    <p className=\"mb-0\">Sistema de Cadastro de Leads SupervitaKids!</p>\n  </Main>\n);\n","import React, { Component } from \"react\";\nimport Main from \"../template/Main\";\nimport axios from \"axios\";\n\nconst headerProps = {\n  icon: \"users\",\n  title: \"Leads\",\n  subtitle: \"Cadastro de usuários: Incluir, Listar, Alterar e Exluir!\",\n};\n\nconst baseUrl = \"http://lead.nutriwealth.com.br:3001/users\";\nconst initialState = {\n  user: { name: \"\", email: \"\", telefone: \"\", url: \"\" },\n  list: [],\n};\n\nexport default class UserCrud extends Component {\n  state = { ...initialState };\n\n  componentWillMount() {\n    axios(baseUrl).then((resp) => {\n      this.setState({ list: resp.data });\n    });\n  }\n\n  clear() {\n    this.setState({ user: initialState.user });\n  }\n\n  save() {\n    const user = this.state.user;\n    const method = user.id ? \"put\" : \"post\";\n    const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\n    axios[method](url, user).then((resp) => {\n      const list = this.getUpdatedList(resp.data);\n      this.setState({ user: initialState.user, list });\n    });\n  }\n\n  getUpdatedList(user, add = true) {\n    const list = this.state.list.filter((u) => u.id !== user.id);\n    if (add) list.unshift(user);\n    return list;\n  }\n\n  getUpdateField(event) {\n    const user = { ...this.state.user };\n    user[event.target.name] = event.target.value;\n    this.setState({ user });\n    const nomeUsuario = user.name.split(\" \");\n    user.url = `https://supervitakids.com.br/${user.name.toLowerCase()}-vip`;\n  }\n\n  renderForm() {\n    return (\n      <div className=\"form\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md-4\">\n            <div className=\"form-group\">\n              <label>Nome</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"name\"\n                value={this.state.user.name}\n                onChange={(e) => this.getUpdateField(e)}\n                placeholder=\"Digite o nome...\"\n              />\n            </div>\n          </div>\n          <div className=\"col-12 col-md-3\">\n            <div className=\"form-group\">\n              <label>E-mail</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"email\"\n                value={this.state.user.email}\n                onChange={(e) => this.getUpdateField(e)}\n                placeholder=\"Digite o e-mail...\"\n              />\n            </div>\n          </div>\n          <div className=\"col-12 col-md-2\">\n            <div className=\"form-group\">\n              <label>Telefone</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"telefone\"\n                value={this.state.user.telefone}\n                onChange={(e) => this.getUpdateField(e)}\n                placeholder=\"Digite o telefone...\"\n              />\n            </div>\n          </div>\n          <div className=\"col-12 col-md-3\">\n            <div className=\"form-group\">\n              <label>Link</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"url\"\n                value={this.state.user.url}\n                onChange={(e) => this.getUpdateField(e)}\n                readonly\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n        <div className=\"row\">\n          <div className=\"col-12 d-flex-justify-content-end\">\n            <button className=\"btn btn-primary\" onClick={(e) => this.save(e)}>\n              Salvar\n            </button>\n\n            <button className=\"btn btn-secondary ml-2\" onClick={(e) => this.clear(e)}>\n              Cancelar\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  load(user) {\n    this.setState({ user });\n  }\n\n  remove(user) {\n    axios.delete(`${baseUrl}/${user.id}`).then((resp) => {\n      const list = this.getUpdatedList(user, false);\n      this.setState({ list });\n    });\n  }\n\n  renderTable() {\n    return (\n      <table className=\"table mt-4\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Nome</th>\n            <th>E-mail</th>\n            <th>Telefone</th>\n            <td>Link</td>\n            <th>Ações</th>\n          </tr>\n        </thead>\n        <tbody>{this.renderRows()}</tbody>\n      </table>\n    );\n  }\n\n  renderRows() {\n    return this.state.list.map((user) => {\n      return (\n        <tr key={user.id}>\n          <td>{user.id}</td>\n          <td>{user.name}</td>\n          <td>{user.email}</td>\n          <td>{user.telefone}</td>\n          <td>{user.url}</td>\n          <td></td>\n        </tr>\n      );\n    });\n  }\n  /**\n * \n            <button className=\"btn btn-warning\" onClick={() => this.load(user)}>\n              <i className=\"fa fa-pencil\"></i>\n            </button>\n            <button className=\"btn btn-danger ml-2\" onClick={() => this.remove(user)}>\n              <i className=\"fa fa-trash\"></i>\n            </button>\n */\n  render() {\n    return (\n      <Main {...headerProps}>\n        {this.renderForm()}\n        {this.renderTable()}\n      </Main>\n    );\n  }\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router'\n\nimport Home from '../components/Home/Home'\nimport UserCrud from '../components/User/UserCrud'\n\nexport default props =>\n    <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/users' component={UserCrud} />\n        <Redirect from='*' to='/' />\n    </Switch>","import React from \"react\";\nimport \"./Footer.css\";\n\nexport default (props) => (\n  <footer className=\"footer\">\n    <span>\n      Desenvolvido com <i className=\"fa fa-heart text-danger\"></i> por\n      <strong> Éder Germânio</strong>\n    </span>\n  </footer>\n);\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport React from 'react'\nimport './App.css'\nimport { BrowserRouter } from 'react-router-dom'\n\n\nimport Logo from '../components/template/Logo'\nimport Nav from '../components/template/Nav'\nimport Routes from './Routes'\nimport Footer from '../components/template/Footer'\n\nexport default props =>\n<BrowserRouter>\n    <div className=\"app\">\n        <Logo />\n        <Nav />\n        <Routes />\n        <Footer />\n    </div>\n</BrowserRouter>\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}